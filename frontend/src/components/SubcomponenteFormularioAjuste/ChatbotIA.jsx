import React, { useState, useRef, useEffect } from 'react';
import { FaRobot, FaPaperPlane, FaTimes, FaLightbulb, FaChevronUp, FaChevronDown } from 'react-icons/fa';

export default function ChatbotIA({ formData, onInputChange }) {
  const [isOpen, setIsOpen] = useState(false);
  const [isMinimized, setIsMinimized] = useState(false);
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef(null);

  // Debug: confirmar que el componente se est√° montando
  console.log('ü§ñ ChatbotIA se est√° renderizando');
  console.log('üìä formData recibido:', formData);

  // Respuestas inteligentes basadas en el contexto del formulario
  const generarRespuestaIA = (mensaje, contexto) => {
    const mensajeLower = mensaje.toLowerCase();
    
    // Respuestas para campos espec√≠ficos
    if (mensajeLower.includes('reporte') || mensajeLower.includes('n√∫mero') || mensajeLower.includes('report')) {
      return {
        tipo: 'ayuda',
        contenido: `üìã **Campo REPORTE No:**\n\nPara este campo puedes usar:\n‚Ä¢ Formato: RPT-2024-001\n‚Ä¢ Secuencial autom√°tico del sistema\n‚Ä¢ Referencia interna del cliente\n‚Ä¢ N√∫mero de caso asignado`,
        accion: 'llenarCampo',
        campo: 'reporteNo',
        valor: `RPT-${new Date().getFullYear()}-${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`,
        icono: 'üìã'
      };
    }

    if (mensajeLower.includes('ciudad') || mensajeLower.includes('ubicaci√≥n') || mensajeLower.includes('location')) {
      return {
        tipo: 'ayuda',
        contenido: `üèôÔ∏è **Campo Ciudad:**\n\nPara este campo:\n‚Ä¢ Usa el dropdown inteligente (bot√≥n con flecha)\n‚Ä¢ Busca por nombre de ciudad o departamento\n‚Ä¢ Se autocompleta autom√°ticamente\n‚Ä¢ Incluye todas las ciudades de Colombia`,
        accion: 'mostrarDropdown',
        campo: 'ciudad',
        icono: 'üèôÔ∏è'
      };
    }

    if (mensajeLower.includes('aseguradora') || mensajeLower.includes('compa√±√≠a') || mensajeLower.includes('insurance')) {
      return {
        tipo: 'ayuda',
        contenido: `üè¢ **Campo Aseguradora:**\n\nPara este campo:\n‚Ä¢ Selecciona del dropdown inteligente\n‚Ä¢ Ver√°s el n√∫mero de funcionarios por aseguradora\n‚Ä¢ Se filtra autom√°ticamente mientras escribes\n‚Ä¢ Incluye todas las aseguradoras del sistema`,
        accion: 'mostrarDropdown',
        campo: 'aseguradora',
        icono: 'üè¢'
      };
    }

    if (mensajeLower.includes('antecedentes') || mensajeLower.includes('descripci√≥n') || mensajeLower.includes('background')) {
      return {
        tipo: 'ayuda',
        contenido: `üìñ **Secci√≥n Antecedentes:**\n\nPara esta secci√≥n:\n‚Ä¢ Describe qu√© pas√≥ ANTES del siniestro\n‚Ä¢ Incluye fecha, hora y circunstancias\n‚Ä¢ S√© espec√≠fico y detallado\n‚Ä¢ Usa el asistente IA para plantillas\n‚Ä¢ M√≠nimo 50 palabras recomendado`,
        accion: 'irSeccion',
        seccion: 'antecedentes',
        icono: 'üìñ'
      };
    }

    if (mensajeLower.includes('reserva') || mensajeLower.includes('monto') || mensajeLower.includes('amount')) {
      return {
        tipo: 'ayuda',
        contenido: `üí∞ **Reserva Sugerida:**\n\nPara este campo:\n‚Ä¢ Se calcula autom√°ticamente seg√∫n el tipo de evento\n‚Ä¢ Puedes ajustar manualmente si es necesario\n‚Ä¢ Incluye justificaci√≥n de la reserva\n‚Ä¢ Usa el asistente IA para sugerencias\n‚Ä¢ Considera el valor asegurado`,
        accion: 'irSeccion',
        seccion: 'reserva',
        icono: 'üí∞'
      };
    }

    if (mensajeLower.includes('intermediario') || mensajeLower.includes('broker')) {
      return {
        tipo: 'ayuda',
        contenido: `ü§ù **Campo Intermediario:**\n\nPara este campo:\n‚Ä¢ Selecciona del dropdown inteligente\n‚Ä¢ Incluye intermediarios principales del sistema\n‚Ä¢ Se filtra autom√°ticamente\n‚Ä¢ Si no encuentras el tuyo, selecciona "Otro"`,
        accion: 'mostrarDropdown',
        campo: 'intermediario',
        icono: 'ü§ù'
      };
    }

    if (mensajeLower.includes('tipo de evento') || mensajeLower.includes('evento') || mensajeLower.includes('event')) {
      return {
        tipo: 'ayuda',
        contenido: `üéØ **Campo Tipo de Evento:**\n\nPara este campo:\n‚Ä¢ Selecciona del dropdown las opciones disponibles\n‚Ä¢ Incluye: Incendio, Inundaci√≥n, Robo, Accidente\n‚Ä¢ Tambi√©n: Da√±o por agua, Vandalismo, Falla el√©ctrica\n‚Ä¢ Si no aplica, selecciona "Otro"`,
        accion: 'mostrarDropdown',
        campo: 'tipoEvento',
        icono: 'üéØ'
      };
    }

    if (mensajeLower.includes('fecha') || mensajeLower.includes('date')) {
      return {
        tipo: 'ayuda',
        contenido: `üìÖ **Campos de Fecha:**\n\nEn el formulario tienes:\n‚Ä¢ **Fecha de Ocurrencia:** Cu√°ndo pas√≥ el siniestro\n‚Ä¢ **Fecha de Asignaci√≥n:** Cu√°ndo se asign√≥ el caso\n‚Ä¢ **Fecha de Visita:** Cu√°ndo se realiz√≥ la inspecci√≥n\n\nUsa el formato DD/MM/AAAA`,
        accion: 'general',
        icono: 'üìÖ'
      };
    }

    if (mensajeLower.includes('observaciones') || mensajeLower.includes('preeliminar') || mensajeLower.includes('preliminar') || mensajeLower.includes('observations')) {
      return {
        tipo: 'ayuda',
        contenido: `üîç **Observaciones Preeliminares:**\n\nPara esta secci√≥n:\n‚Ä¢ Solo aparece en la versi√≥n PREELIMINAR\n‚Ä¢ Describe hallazgos iniciales de la inspecci√≥n\n‚Ä¢ Incluye observaciones t√©cnicas importantes\n‚Ä¢ Menciona elementos que requieren atenci√≥n\n‚Ä¢ Usa el asistente IA para plantillas\n‚Ä¢ M√≠nimo 100 palabras recomendado`,
        accion: 'irSeccion',
        seccion: 'observacionesPreeliminar',
        icono: 'üîç'
      };
    }

    if (mensajeLower.includes('hallazgos') || mensajeLower.includes('encontr√©') || mensajeLower.includes('descubr√≠') || mensajeLower.includes('findings')) {
      return {
        tipo: 'ayuda',
        contenido: `üîç **Hallazgos en Observaciones Preeliminares:**\n\nPara documentar hallazgos:\n‚Ä¢ **Estructura recomendada:**\n  1. Ubicaci√≥n del hallazgo\n  2. Descripci√≥n detallada\n  3. Posible causa\n  4. Impacto estimado\n  5. Acci√≥n recomendada\n\n‚Ä¢ **Ejemplo:** "En el √°rea norte se observ√≥ humedad en las paredes, posiblemente por filtraci√≥n del techo. Se requiere revisi√≥n del sistema de impermeabilizaci√≥n."`,
        accion: 'llenarCampo',
        campo: 'observacionesPreeliminar',
        valor: 'Hallazgo identificado: ',
        icono: 'üîç'
      };
    }

    if (mensajeLower.includes('da√±os') || mensajeLower.includes('destrucci√≥n') || mensajeLower.includes('p√©rdidas') || mensajeLower.includes('damage')) {
      return {
        tipo: 'ayuda',
        contenido: `üí• **Documentar Da√±os en Observaciones:**\n\nPara describir da√±os:\n‚Ä¢ **Elementos a incluir:**\n  1. Extensi√≥n del da√±o\n  2. Gravedad (leve, moderado, severo)\n  3. √Åreas afectadas\n  4. Elementos estructurales comprometidos\n  5. Estimaci√≥n de costos de reparaci√≥n\n\n‚Ä¢ **Ejemplo:** "El da√±o se extiende aproximadamente 15m¬≤ en la zona central, afectando principalmente el sistema el√©ctrico y acabados. Se estima un costo de reparaci√≥n de $2,500,000 COP."`,
        accion: 'llenarCampo',
        campo: 'observacionesPreeliminar',
        valor: 'Da√±os observados: ',
        icono: 'üí•'
      };
    }

    if (mensajeLower.includes('recomendaciones') || mensajeLower.includes('sugerencias') || mensajeLower.includes('acciones') || mensajeLower.includes('recommendations')) {
      return {
        tipo: 'ayuda',
        contenido: `üí° **Recomendaciones en Observaciones:**\n\nPara incluir recomendaciones:\n‚Ä¢ **Tipos de recomendaciones:**\n  1. **Inmediatas:** Acciones urgentes (24-48h)\n  2. **Corto plazo:** Reparaciones b√°sicas (1-2 semanas)\n  3. **Mediano plazo:** Mejoras preventivas (1-3 meses)\n  4. **Largo plazo:** Renovaciones mayores (3-12 meses)\n\n‚Ä¢ **Ejemplo:** "Se recomienda: 1) Aislar el √°rea afectada inmediatamente, 2) Contratar especialista en impermeabilizaci√≥n, 3) Implementar mantenimiento preventivo trimestral."`,
        accion: 'llenarCampo',
        campo: 'observacionesPreeliminar',
        valor: 'Recomendaciones: ',
        icono: 'üí°'
      };
    }

    if (mensajeLower.includes('incendio') || mensajeLower.includes('fuego') || mensajeLower.includes('fire')) {
      return {
        tipo: 'ayuda',
        contenido: `üî• **Observaciones para Siniestro por Incendio:**\n\n**Elementos clave a documentar:**\n‚Ä¢ **Origen del fuego:** Punto de inicio identificado\n‚Ä¢ **Propagaci√≥n:** C√≥mo se extendi√≥ el incendio\n‚Ä¢ **Materiales afectados:** Tipo de combustibles\n‚Ä¢ **Da√±os estructurales:** Compromiso de elementos\n‚Ä¢ **Sistemas de protecci√≥n:** Estado de extintores, alarmas\n‚Ä¢ **Acceso de bomberos:** V√≠as de entrada/salida\n\n**Ejemplo:** "El incendio se origin√≥ en el √°rea de transformadores, propag√°ndose por el sistema de cableado. Se afectaron principalmente equipos el√©ctricos y acabados. Los sistemas de alarma funcionaron correctamente."`,
        accion: 'llenarCampo',
        campo: 'observacionesPreeliminar',
        valor: 'Observaciones incendio: ',
        icono: 'üî•'
      };
    }

    if (mensajeLower.includes('inundaci√≥n') || mensajeLower.includes('agua') || mensajeLower.includes('humedad') || mensajeLower.includes('flood')) {
      return {
        tipo: 'ayuda',
        contenido: `üíß **Observaciones para Siniestro por Inundaci√≥n:**\n\n**Elementos clave a documentar:**\n‚Ä¢ **Fuente del agua:** Origen de la inundaci√≥n\n‚Ä¢ **Nivel alcanzado:** Altura m√°xima del agua\n‚Ä¢ **Tiempo de exposici√≥n:** Duraci√≥n del contacto\n‚Ä¢ **Materiales afectados:** Elementos da√±ados\n‚Ä¢ **Humedad residual:** Estado actual de humedad\n‚Ä¢ **Riesgo de moho:** Condiciones para proliferaci√≥n\n\n**Ejemplo:** "La inundaci√≥n se origin√≥ por rotura de tuber√≠a principal, alcanzando 30cm de altura. El agua permaneci√≥ 4 horas, afectando muebles y equipos electr√≥nicos. Se detecta humedad residual en paredes."`,
        accion: 'llenarCampo',
        campo: 'observacionesPreeliminar',
        valor: 'Observaciones inundaci√≥n: ',
        icono: 'üíß'
      };
    }

    if (mensajeLower.includes('robo') || mensajeLower.includes('hurto') || mensajeLower.includes('theft')) {
      return {
        tipo: 'ayuda',
        contenido: `ü¶π **Observaciones para Siniestro por Robo:**\n\n**Elementos clave a documentar:**\n‚Ä¢ **Punto de entrada:** C√≥mo accedieron los ladrones\n‚Ä¢ **M√©todo de forzado:** T√©cnicas utilizadas\n‚Ä¢ **Elementos robados:** Inventario detallado\n‚Ä¢ **Da√±os colaterales:** Destrozos adicionales\n‚Ä¢ **Sistemas de seguridad:** Estado de alarmas, c√°maras\n‚Ä¢ **Evidencia:** Huellas, herramientas abandonadas\n\n**Ejemplo:** "El robo se realiz√≥ forzando la puerta trasera con herramientas especializadas. Se sustrajeron equipos electr√≥nicos valorados en $15,000,000 COP. Los sistemas de alarma no funcionaron por corte de energ√≠a."`,
        accion: 'llenarCampo',
        campo: 'observacionesPreeliminar',
        valor: 'Observaciones robo: ',
        icono: 'ü¶π'
      };
    }

    // Nuevas respuestas para campos del informe preeliminar
    if (mensajeLower.includes('an√°lisis') || mensajeLower.includes('cobertura') || mensajeLower.includes('p√≥liza') || mensajeLower.includes('policy')) {
      return {
        tipo: 'ayuda',
        contenido: `üìã **An√°lisis de Cobertura:**\n\n**Secci√≥n 8 del Informe Preeliminar:**\n‚Ä¢ **An√°lisis de P√≥liza:** Condiciones especiales, cl√°usulas relevantes\n‚Ä¢ **Coberturas Aplicables:** Qu√© cubre la p√≥liza para este siniestro\n‚Ä¢ **Exclusiones:** Qu√© NO cubre la p√≥liza\n‚Ä¢ **Garant√≠as:** Requisitos espec√≠ficos del asegurado\n‚Ä¢ **Coaseguro:** Participaci√≥n de otras aseguradoras\n\n**Ejemplo:** "La p√≥liza cubre da√±os por incendio hasta $500,000,000 COP. Excluye da√±os por negligencia. Requiere sistema de alarma certificado."`,
        accion: 'irSeccion',
        seccion: 'analisisCobertura',
        icono: 'üìã'
      };
    }

    if (mensajeLower.includes('exclusiones') || mensajeLower.includes('exclusions') || mensajeLower.includes('no cubre')) {
      return {
        tipo: 'ayuda',
        contenido: `‚ùå **Exclusiones de Cobertura:**\n\n**Elementos a identificar:**\n‚Ä¢ **Exclusiones generales:** Da√±os por negligencia, mantenimiento\n‚Ä¢ **Exclusiones espec√≠ficas:** Actos de terrorismo, guerra\n‚Ä¢ **Exclusiones por omisi√≥n:** Falta de medidas de seguridad\n‚Ä¢ **Exclusiones temporales:** Per√≠odos de carencia\n‚Ä¢ **Exclusiones geogr√°ficas:** Zonas de alto riesgo\n\n**Ejemplo:** "La p√≥liza excluye: da√±os por falta de mantenimiento, actos de terrorismo, y siniestros ocurridos fuera del horario de operaci√≥n."`,
        accion: 'llenarCampo',
        campo: 'exclusiones',
        valor: 'Exclusiones identificadas: ',
        icono: '‚ùå'
      };
    }

    if (mensajeLower.includes('garant√≠as') || mensajeLower.includes('warranties') || mensajeLower.includes('requisitos')) {
      return {
        tipo: 'ayuda',
        contenido: `üõ°Ô∏è **Garant√≠as y Requisitos:**\n\n**Elementos a verificar:**\n‚Ä¢ **Sistemas de seguridad:** Alarmas, c√°maras, cercas\n‚Ä¢ **Mantenimiento:** Programas de mantenimiento preventivo\n‚Ä¢ **Certificaciones:** Normas t√©cnicas, licencias\n‚Ä¢ **Inspecciones:** Frecuencia de revisiones\n‚Ä¢ **Personal:** Capacitaci√≥n del personal\n\n**Ejemplo:** "El asegurado debe mantener: sistema de alarma operativo 24/7, mantenimiento trimestral de equipos, y personal capacitado en primeros auxilios."`,
        accion: 'llenarCampo',
        campo: 'garantias',
        valor: 'Garant√≠as requeridas: ',
        icono: 'üõ°Ô∏è'
      };
    }

    if (mensajeLower.includes('coaseguro') || mensajeLower.includes('reaseguro') || mensajeLower.includes('co-insurance')) {
      return {
        tipo: 'ayuda',
        contenido: `ü§ù **Coaseguro y Reaseguro:**\n\n**Informaci√≥n a documentar:**\n‚Ä¢ **Participaci√≥n:** Porcentaje de cada aseguradora\n‚Ä¢ **L√≠mites:** Montos m√°ximos por aseguradora\n‚Ä¢ **Condiciones:** T√©rminos espec√≠ficos del coaseguro\n‚Ä¢ **Responsabilidades:** Qui√©n maneja qu√©\n‚Ä¢ **Comunicaci√≥n:** Protocolos de coordinaci√≥n\n\n**Ejemplo:** "Coaseguro: Seguros del Estado (60%), Aseguradora ABC (25%), Reaseguradora XYZ (15%). L√≠mite m√°ximo por aseguradora: $300,000,000 COP."`,
        accion: 'llenarCampo',
        campo: 'coaseguro',
        valor: 'Informaci√≥n de coaseguro: ',
        icono: 'ü§ù'
      };
    }

    if (mensajeLower.includes('documentos') || mensajeLower.includes('solicitud') || mensajeLower.includes('requeridos')) {
      return {
        tipo: 'ayuda',
        contenido: `üìã **Solicitud de Documentos:**\n\n**Documentos t√≠picos requeridos:**\n‚Ä¢ **Facturas y recibos:** Comprobantes de compra\n‚Ä¢ **Reportes t√©cnicos:** Evaluaciones de expertos\n‚Ä¢ **Fotograf√≠as:** Antes y despu√©s del siniestro\n‚Ä¢ **Testimonios:** Declaraciones de testigos\n‚Ä¢ **Certificados:** Licencias, permisos\n‚Ä¢ **Contratos:** Acuerdos de mantenimiento\n\n**Ejemplo:** "Se solicitan: facturas de equipos afectados, reporte t√©cnico de ingeniero estructural, fotograf√≠as del estado anterior, y certificado de mantenimiento preventivo."`,
        accion: 'llenarCampo',
        campo: 'solicitudDocumentos',
        valor: 'Documentos solicitados: ',
        icono: 'üìã'
      };
    }

    if (mensajeLower.includes('declinaci√≥n') || mensajeLower.includes('decline') || mensajeLower.includes('no cubre')) {
      return {
        tipo: 'ayuda',
        contenido: `‚ùå **Declinaci√≥n de Cobertura:**\n\n**Razones comunes para declinar:**\n‚Ä¢ **Exclusiones aplicables:** Da√±os no cubiertos por la p√≥liza\n‚Ä¢ **Falta de garant√≠as:** No se cumplieron requisitos\n‚Ä¢ **Ocultaci√≥n de informaci√≥n:** Datos falsos o incompletos\n‚Ä¢ **Actos intencionales:** Da√±os causados deliberadamente\n‚Ä¢ **Falta de notificaci√≥n:** Siniestro reportado tard√≠amente\n\n**Ejemplo:** "Se declina cobertura por: falta de mantenimiento preventivo (garant√≠a incumplida), y da√±os causados por negligencia (exclusi√≥n aplicable)."`,
        accion: 'llenarCampo',
        campo: 'declinacion',
        valor: 'Razones de declinaci√≥n: ',
        icono: '‚ùå'
      };
    }

    if (mensajeLower.includes('pr√≥ximos pasos') || mensajeLower.includes('siguiente') || mensajeLower.includes('acciones')) {
      return {
        tipo: 'ayuda',
        contenido: `üöÄ **Pr√≥ximos Pasos:**\n\n**Plan de acci√≥n recomendado:**\n‚Ä¢ **Inmediato (24-48h):** Aislar √°rea, contactar especialistas\n‚Ä¢ **Corto plazo (1-2 semanas):** Evaluaciones t√©cnicas, presupuestos\n‚Ä¢ **Mediano plazo (1-3 meses):** Reparaciones, mejoras\n‚Ä¢ **Largo plazo (3-12 meses):** Prevenci√≥n, monitoreo\n‚Ä¢ **Responsabilidades:** Qui√©n hace qu√© y cu√°ndo\n\n**Ejemplo:** "Pr√≥ximos pasos: 1) Aislar √°rea afectada (hoy), 2) Contratar ingeniero estructural (esta semana), 3) Obtener presupuestos (pr√≥ximas 2 semanas), 4) Iniciar reparaciones (pr√≥ximo mes)."`,
        accion: 'llenarCampo',
        campo: 'proximosPasos',
        valor: 'Plan de acci√≥n: ',
        icono: 'üöÄ'
      };
    }

    if (mensajeLower.includes('ayuda') || mensajeLower.includes('c√≥mo') || mensajeLower.includes('help')) {
      return {
        tipo: 'ayuda',
        contenido: `ü§ñ **¬°Hola! Soy tu asistente IA**\n\nTe puedo ayudar con:\n‚Ä¢ üìã C√≥mo llenar campos espec√≠ficos\n‚Ä¢ üìñ Explicaciones de secciones\n‚Ä¢ üí∞ C√°lculos autom√°ticos\n‚Ä¢ üí° Sugerencias de contenido\n‚Ä¢ üéØ Navegaci√≥n por el formulario\n‚Ä¢ üîç Observaciones preeliminares\n‚Ä¢ üìã An√°lisis de cobertura\n‚Ä¢ üìù Solicitud de documentos\n‚Ä¢ ‚ùå Declinaciones\n‚Ä¢ üöÄ Pr√≥ximos pasos\n\n¬°Preg√∫ntame lo que necesites!`,
        accion: 'general',
        icono: 'ü§ñ'
      };
    }

    if (mensajeLower.includes('generar') || mensajeLower.includes('documento') || mensajeLower.includes('word')) {
      return {
        tipo: 'ayuda',
        contenido: `üìÑ **Generar Documento Word:**\n\nPara generar el documento:\n‚Ä¢ Completa al menos los campos obligatorios\n‚Ä¢ Haz clic en "üìÑ Generar Documento"\n‚Ä¢ Se crear√° un archivo .docx profesional\n‚Ä¢ Se guardar√° autom√°ticamente en el historial\n‚Ä¢ Incluye toda la informaci√≥n del formulario`,
        accion: 'general',
        icono: 'üìÑ'
      };
    }

    if (mensajeLower.includes('guardar') || mensajeLower.includes('save')) {
      return {
        tipo: 'ayuda',
        contenido: `üíæ **Guardar Formulario:**\n\nPara guardar el formulario:\n‚Ä¢ Haz clic en "üíæ Guardar Formulario"\n‚Ä¢ Se guardar√° en el historial del sistema\n‚Ä¢ Podr√°s editarlo m√°s tarde\n‚Ä¢ Se incluir√° en los reportes\n‚Ä¢ Se asocia con tu usuario`,
        accion: 'general',
        icono: 'üíæ'
      };
    }

    // Respuesta por defecto
    return {
      tipo: 'ayuda',
      contenido: `ü§î **Entiendo tu pregunta:** "${mensaje}"\n\nTe sugiero ser m√°s espec√≠fico:\n‚Ä¢ Pregunta sobre campos espec√≠ficos\n‚Ä¢ Usa palabras como "ayuda", "c√≥mo", "explica"\n‚Ä¢ Menciona el nombre del campo o secci√≥n\n‚Ä¢ Ejemplo: "¬øC√≥mo lleno el campo ciudad?"`,
      accion: 'general',
      icono: 'ü§î'
    };
  };

  const enviarMensaje = async () => {
    if (!inputMessage.trim()) return;

    const userMessage = {
      id: Date.now(),
      tipo: 'usuario',
      contenido: inputMessage,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setIsTyping(true);

    // Simular procesamiento de IA
    setTimeout(() => {
      const respuesta = generarRespuestaIA(inputMessage, formData);
      
      const aiMessage = {
        id: Date.now() + 1,
        tipo: 'ia',
        contenido: respuesta.contenido,
        accion: respuesta.accion,
        campo: respuesta.campo,
        valor: respuesta.valor,
        seccion: respuesta.seccion,
        icono: respuesta.icono,
        timestamp: new Date()
      };

      setMessages(prev => [...prev, aiMessage]);
      setIsTyping(false);

      // Ejecutar acci√≥n si es necesaria
      if (respuesta.accion === 'llenarCampo' && respuesta.campo) {
        onInputChange(respuesta.campo, respuesta.valor);
      }
    }, 1000);
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      enviarMensaje();
    }
  };

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const limpiarChat = () => {
    setMessages([]);
  };

  return (
    <>
      {/* Bot√≥n flotante del chatbot */}
      <button
        onClick={() => setIsOpen(true)}
        className="fixed bottom-6 right-6 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white p-4 rounded-full shadow-lg transition-all duration-300 z-[9999] group animate-pulse border-2 border-white"
        title="Asistente IA - Haz clic para abrir"
        style={{ zIndex: 9999 }}
      >
        <FaRobot className="h-6 w-6" />
        <div className="absolute right-full mr-3 top-1/2 transform -translate-y-1/2 bg-gray-800 text-white px-3 py-2 rounded-lg text-sm whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity shadow-lg">
          ü§ñ Asistente IA
        </div>
      </button>

      {/* Ventana del chatbot */}
      {isOpen && (
        <div className={`fixed bottom-24 right-6 w-96 ${isMinimized ? 'h-16' : 'h-96'} bg-white rounded-lg shadow-2xl border border-gray-200 z-50 flex flex-col transition-all duration-300`}>
          {/* Header */}
          <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-t-lg flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <FaRobot className="h-5 w-5" />
              <h3 className="font-semibold">Asistente IA</h3>
            </div>
            <div className="flex items-center space-x-2">
              <button
                onClick={() => setIsMinimized(!isMinimized)}
                className="text-white hover:text-gray-200 transition-colors"
                title={isMinimized ? "Expandir" : "Minimizar"}
              >
                {isMinimized ? <FaChevronUp className="h-4 w-4" /> : <FaChevronDown className="h-4 w-4" />}
              </button>
              <button
                onClick={() => setIsOpen(false)}
                className="text-white hover:text-gray-200 transition-colors"
                title="Cerrar"
              >
                <FaTimes className="h-5 w-5" />
              </button>
            </div>
          </div>

          {/* Contenido (solo visible si no est√° minimizado) */}
          {!isMinimized && (
            <>
              {/* Mensajes */}
              <div className="flex-1 overflow-y-auto p-4 space-y-3 bg-gray-50">
                {messages.length === 0 && (
                  <div className="text-center text-gray-500 py-8">
                    <FaLightbulb className="h-12 w-12 mx-auto mb-3 text-blue-400" />
                    <p className="text-sm font-medium mb-2">
                      ¬°Hola! Soy tu asistente IA ü§ñ
                    </p>
                    <p className="text-xs text-gray-400 mb-4">
                      Preg√∫ntame cualquier cosa sobre el formulario:
                    </p>
                    <div className="space-y-2 text-xs">
                      <div className="bg-white p-2 rounded border">
                        <p className="font-medium text-blue-600">üìã "¬øC√≥mo lleno el campo reporte?"</p>
                      </div>
                      <div className="bg-white p-2 rounded border">
                        <p className="font-medium text-green-600">üìñ "Explica la secci√≥n de antecedentes"</p>
                      </div>
                      <div className="bg-white p-2 rounded border">
                        <p className="font-medium text-purple-600">üí∞ "¬øQu√© significa reserva sugerida?"</p>
                      </div>
                      <div className="bg-white p-2 rounded border">
                        <p className="font-medium text-orange-600">üèôÔ∏è "Ayuda con la ciudad"</p>
                      </div>
                    </div>
                  </div>
                )}

                {messages.map((message) => (
                  <div
                    key={message.id}
                    className={`flex ${message.tipo === 'usuario' ? 'justify-end' : 'justify-start'}`}
                  >
                    <div
                      className={`max-w-xs p-3 rounded-lg ${
                        message.tipo === 'usuario'
                          ? 'bg-gradient-to-r from-blue-600 to-blue-700 text-white'
                          : 'bg-white text-gray-800 border border-gray-200 shadow-sm'
                      }`}
                    >
                      {message.tipo === 'ia' && message.icono && (
                        <div className="text-lg mb-1">{message.icono}</div>
                      )}
                      <p className="text-sm whitespace-pre-line leading-relaxed">{message.contenido}</p>
                      {message.accion && message.accion !== 'general' && (
                        <div className="mt-2 pt-2 border-t border-gray-300">
                          <button
                            onClick={() => {
                              if (message.accion === 'llenarCampo' && message.campo && message.valor) {
                                onInputChange(message.campo, message.valor);
                              }
                            }}
                            className="text-xs bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-full transition-colors font-medium"
                          >
                            {message.accion === 'llenarCampo' ? '‚úÖ Aplicar' : 'üëÅÔ∏è Ver'}
                          </button>
                        </div>
                      )}
                      <div className="text-xs text-gray-400 mt-2">
                        {message.timestamp.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit' })}
                      </div>
                    </div>
                  </div>
                ))}

                {isTyping && (
                  <div className="flex justify-start">
                    <div className="bg-white text-gray-800 p-3 rounded-lg border border-gray-200 shadow-sm">
                      <div className="flex items-center space-x-2">
                        <FaRobot className="h-4 w-4 text-blue-500" />
                        <div className="flex space-x-1">
                          <div className="w-2 h-2 bg-blue-400 rounded-full animate-bounce"></div>
                          <div className="w-2 h-2 bg-blue-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                          <div className="w-2 h-2 bg-blue-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                        </div>
                        <span className="text-xs text-gray-500 ml-2">IA escribiendo...</span>
                      </div>
                    </div>
                  </div>
                )}

                <div ref={messagesEndRef} />
              </div>

              {/* Input y controles */}
              <div className="p-4 border-t border-gray-200 bg-white">
                <div className="flex space-x-2">
                  <input
                    type="text"
                    value={inputMessage}
                    onChange={(e) => setInputMessage(e.target.value)}
                    onKeyPress={handleKeyPress}
                    placeholder="Escribe tu pregunta..."
                    className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm"
                  />
                  <button
                    onClick={enviarMensaje}
                    disabled={!inputMessage.trim()}
                    className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 disabled:from-gray-300 disabled:to-gray-400 text-white p-2 rounded-md transition-all duration-200 disabled:cursor-not-allowed"
                    title="Enviar mensaje"
                  >
                    <FaPaperPlane className="h-4 w-4" />
                  </button>
                </div>
                
                {/* Controles adicionales */}
                <div className="flex justify-between items-center mt-2">
                  <button
                    onClick={limpiarChat}
                    className="text-xs text-gray-500 hover:text-gray-700 transition-colors"
                    title="Limpiar chat"
                  >
                    üóëÔ∏è Limpiar chat
                  </button>
                  <span className="text-xs text-gray-400">
                    {messages.length} mensaje{messages.length !== 1 ? 's' : ''}
                  </span>
                </div>
              </div>
            </>
          )}
        </div>
      )}
    </>
  );
}
