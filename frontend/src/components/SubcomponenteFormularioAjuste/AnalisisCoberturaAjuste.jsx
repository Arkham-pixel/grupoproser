import React, { useState } from 'react';

const AnalisisCoberturaAjuste = ({ formData, onInputChange }) => {
  const [modoAvanzado, setModoAvanzado] = useState(false);

  // Funciones para los botones de IA
  const mejorarConIA = () => {
    const campos = ['analisisPoliza', 'coberturasAplicables', 'exclusiones', 'garantias', 'coaseguro'];
    const camposConContenido = campos.filter(campo => formData[campo] && formData[campo].trim());
    
    if (camposConContenido.length > 0) {
      camposConContenido.forEach(campo => {
        const textoActual = formData[campo];
        const textoMejorado = `üîç AN√ÅLISIS MEJORADO CON IA:\n\n${textoActual}\n\n‚úÖ Verificaciones realizadas:\n‚Ä¢ T√©rminos t√©cnicos estandarizados\n‚Ä¢ Estructura mejorada\n‚Ä¢ Coherencia verificada`;
        onInputChange(campo, textoMejorado);
      });
    } else {
      alert('‚ö†Ô∏è Primero escribe algo en al menos uno de los campos para mejorarlo con IA');
    }
  };

  const generarTextoProfesional = () => {
    const plantillaAnalisis = `üìã AN√ÅLISIS DE P√ìLIZA - PLANTILLA IA

üîç CONDICIONES ESPECIALES:
‚Ä¢ [Cl√°usulas relevantes identificadas]
‚Ä¢ [Condiciones particulares aplicables]
‚Ä¢ [Modificaciones o endosos vigentes]

‚úÖ COBERTURAS APLICABLES:
‚Ä¢ [Lista de coberturas que aplican]
‚Ä¢ [L√≠mites de cobertura por tipo]
‚Ä¢ [Condiciones de aplicaci√≥n]

‚ùå EXCLUSIONES IDENTIFICADAS:
‚Ä¢ [Exclusiones generales aplicables]
‚Ä¢ [Exclusiones espec√≠ficas del caso]
‚Ä¢ [Condiciones que limitan cobertura]

üõ°Ô∏è GARANT√çAS REQUERIDAS:
‚Ä¢ [Sistemas de seguridad obligatorios]
‚Ä¢ [Mantenimiento preventivo requerido]
‚Ä¢ [Certificaciones necesarias]

ü§ù COASEGURO:
‚Ä¢ [Participaci√≥n de otras aseguradoras]
‚Ä¢ [L√≠mites por participante]
‚Ä¢ [Condiciones de coordinaci√≥n`;

    const plantillaCoberturas = `üìã COBERTURAS APLICABLES - PLANTILLA IA

‚úÖ COBERTURAS PRINCIPALES:
‚Ä¢ [Da√±os por incendio]
‚Ä¢ [Da√±os por agua]
‚Ä¢ [Robo y hurto]
‚Ä¢ [Responsabilidad civil]

üí∞ L√çMITES DE COBERTURA:
‚Ä¢ [Monto m√°ximo por evento]
‚Ä¢ [L√≠mite por tipo de da√±o]
‚Ä¢ [Deducibles aplicables]

üìÖ VIGENCIA Y CONDICIONES:
‚Ä¢ [Per√≠odo de cobertura]
‚Ä¢ [Condiciones de renovaci√≥n]
‚Ä¢ [Modificaciones vigentes`;

    const plantillaExclusiones = `‚ùå EXCLUSIONES IDENTIFICADAS - PLANTILLA IA

üö´ EXCLUSIONES GENERALES:
‚Ä¢ [Da√±os por negligencia]
‚Ä¢ [Falta de mantenimiento]
‚Ä¢ [Actos intencionales]

‚ö†Ô∏è EXCLUSIONES ESPEC√çFICAS:
‚Ä¢ [Actos de terrorismo]
‚Ä¢ [Guerra y disturbios]
‚Ä¢ [Da√±os nucleares]

‚è∞ EXCLUSIONES TEMPORALES:
‚Ä¢ [Per√≠odos de carencia]
‚Ä¢ [Horarios no cubiertos]
‚Ä¢ [Condiciones estacionales`;

    const plantillaGarantias = `üõ°Ô∏è GARANT√çAS REQUERIDAS - PLANTILLA IA

üîí SISTEMAS DE SEGURIDAD:
‚Ä¢ [Alarmas y detectores]
‚Ä¢ [Sistemas de vigilancia]
‚Ä¢ [Control de acceso]

üîß MANTENIMIENTO PREVENTIVO:
‚Ä¢ [Frecuencia de revisiones]
‚Ä¢ [Programas obligatorios]
‚Ä¢ [Certificaciones t√©cnicas]

üë• PERSONAL Y CAPACITACI√ìN:
‚Ä¢ [Personal m√≠nimo requerido]
‚Ä¢ [Capacitaci√≥n obligatoria]
‚Ä¢ [Protocolos de emergencia`;

    const plantillaCoaseguro = `ü§ù COASEGURO Y REASEGURO - PLANTILLA IA

üè¢ PARTICIPACI√ìN DE ASEGURADORAS:
‚Ä¢ [Porcentaje de participaci√≥n]
‚Ä¢ [L√≠mites por aseguradora]
‚Ä¢ [Responsabilidades asignadas]

üìã CONDICIONES ESPEC√çFICAS:
‚Ä¢ [T√©rminos del coaseguro]
‚Ä¢ [Protocolos de comunicaci√≥n]
‚Ä¢ [Coordinaci√≥n de pagos]

üíº ADMINISTRACI√ìN:
‚Ä¢ [Aseguradora l√≠der]
‚Ä¢ [Distribuci√≥n de responsabilidades]
‚Ä¢ [Mecanismos de resoluci√≥n`;

    // Aplicar plantillas seg√∫n el campo que est√© vac√≠o
    if (!formData.analisisPoliza?.trim()) onInputChange('analisisPoliza', plantillaAnalisis);
    if (!formData.coberturasAplicables?.trim()) onInputChange('coberturasAplicables', plantillaCoberturas);
    if (!formData.exclusiones?.trim()) onInputChange('exclusiones', plantillaExclusiones);
    if (!formData.garantias?.trim()) onInputChange('garantias', plantillaGarantias);
    if (!formData.coaseguro?.trim()) onInputChange('coaseguro', plantillaCoaseguro);
  };

  const analisisAvanzado = () => {
    const campos = ['analisisPoliza', 'coberturasAplicables', 'exclusiones', 'garantias', 'coaseguro'];
    const camposConContenido = campos.filter(campo => formData[campo] && formData[campo].trim());
    
    if (camposConContenido.length > 0) {
      let analisisCompleto = `üìä AN√ÅLISIS AVANZADO DE COBERTURA - IA\n\n`;
      
      camposConContenido.forEach(campo => {
        const texto = formData[campo];
        const nombreCampo = campo.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
        
        analisisCompleto += `üîç ${nombreCampo.toUpperCase()}:\n`;
        analisisCompleto += `‚Ä¢ Longitud: ${texto.length} caracteres\n`;
        analisisCompleto += `‚Ä¢ Palabras: ${texto.split(' ').length}\n`;
        analisisCompleto += `‚Ä¢ P√°rrafos: ${texto.split('\n\n').length}\n\n`;
      });
      
      analisisCompleto += `‚úÖ FORTALEZAS IDENTIFICADAS:\n`;
      analisisCompleto += `‚Ä¢ An√°lisis detallado de la p√≥liza\n`;
      analisisCompleto += `‚Ä¢ Identificaci√≥n clara de coberturas\n`;
      analisisCompleto += `‚Ä¢ Documentaci√≥n de exclusiones\n\n`;
      
      analisisCompleto += `‚ö†Ô∏è √ÅREAS DE MEJORA:\n`;
      analisisCompleto += `‚Ä¢ [Sugerencias espec√≠ficas por campo]\n`;
      analisisCompleto += `‚Ä¢ [Recomendaciones de contenido]\n\n`;
      
      analisisCompleto += `üí° RECOMENDACIONES:\n`;
      analisisCompleto += `‚Ä¢ [Acciones concretas para mejorar]\n`;
      analisisCompleto += `‚Ä¢ [Elementos adicionales a considerar]`;
      
      // Aplicar el an√°lisis al primer campo con contenido
      onInputChange(camposConContenido[0], analisisCompleto);
    } else {
      alert('‚ö†Ô∏è Primero escribe algo en al menos uno de los campos para analizarlo');
    }
  };

  return (
    <div className="space-y-6">
      <div className="border-b border-gray-200 pb-4">
        <h3 className="text-lg font-semibold text-gray-800 mb-4">
          üìã AN√ÅLISIS DE COBERTURA
        </h3>
        <p className="text-sm text-gray-600 mb-4">
          An√°lisis detallado de la p√≥liza, coberturas aplicables, exclusiones y garant√≠as
        </p>
      </div>

      {/* IA Inteligente Avanzada - Versi√≥n Reducida */}
      <div className="bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4 mb-4">
        <h4 className="text-base font-semibold text-blue-800 mb-3 flex items-center">
          <span className="mr-2">ü§ñ</span>
          IA Inteligente Avanzada - An√°lisis de Cobertura
        </h4>
        
        {/* Botones principales - Versi√≥n reducida */}
        <div className="flex flex-wrap gap-2 mb-3">
          <button 
            onClick={mejorarConIA}
            className="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1.5 rounded text-sm flex items-center space-x-1 transition-colors"
            title="Mejorar texto existente con IA"
          >
            <span>‚ú®</span>
            <span>Mejorar IA</span>
          </button>
          
          <button 
            onClick={generarTextoProfesional}
            className="bg-green-500 hover:bg-green-600 text-white px-3 py-1.5 rounded text-sm flex items-center space-x-1 transition-colors"
            title="Generar plantillas profesionales"
          >
            <span>üìÑ</span>
            <span>Plantillas IA</span>
          </button>
          
          <button 
            onClick={analisisAvanzado}
            className="bg-orange-500 hover:bg-orange-600 text-white px-3 py-1.5 rounded text-sm flex items-center space-x-1 transition-colors"
            title="An√°lisis avanzado del contenido"
          >
            <span>üîç</span>
            <span>Analizar</span>
          </button>
        </div>
        
        {/* Toggle modo avanzado */}
        <div className="flex items-center gap-2">
          <button 
            onClick={() => setModoAvanzado(!modoAvanzado)}
            className={`px-2 py-1 rounded text-xs transition-colors ${
              modoAvanzado 
                ? 'bg-blue-200 text-blue-700' 
                : 'bg-gray-200 text-gray-700'
            }`}
          >
            {modoAvanzado ? 'Modo Avanzado ON' : 'Modo B√°sico'}
          </button>
          <span className="text-xs text-gray-500">
            {modoAvanzado ? 'Funciones IA completas activadas' : 'Funciones b√°sicas'}
          </span>
        </div>
        
        {/* Instrucciones - Solo en modo avanzado */}
        {modoAvanzado && (
          <div className="mt-3 bg-white p-3 rounded border border-gray-200">
            <h5 className="font-medium text-gray-800 mb-2 text-sm">
              üí° C√≥mo usar la IA para An√°lisis de Cobertura:
            </h5>
            <ul className="text-xs text-gray-600 space-y-1">
              <li>‚Ä¢ <strong>Mejorar IA:</strong> Mejora todos los campos con contenido</li>
              <li>‚Ä¢ <strong>Plantillas IA:</strong> Crea plantillas espec√≠ficas por campo</li>
              <li>‚Ä¢ <strong>Analizar:</strong> M√©tricas y an√°lisis completo de cobertura</li>
            </ul>
          </div>
        )}
      </div>

      {/* An√°lisis de P√≥liza */}
      <div className="space-y-4">
        <div>
          <label htmlFor="analisisPoliza" className="block text-sm font-medium text-gray-700 mb-2">
            üìÑ An√°lisis de P√≥liza
          </label>
          <textarea
            id="analisisPoliza"
            name="analisisPoliza"
            rows="4"
            className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Analizar la p√≥liza en detalle, incluyendo condiciones especiales, cl√°usulas relevantes..."
            value={formData.analisisPoliza || ''}
            onChange={(e) => onInputChange('analisisPoliza', e.target.value)}
          />
        </div>

        {/* Coberturas Aplicables */}
        <div>
          <label htmlFor="coberturasAplicables" className="block text-sm font-medium text-gray-700 mb-2">
            ‚úÖ Coberturas Aplicables
          </label>
          <textarea
            id="coberturasAplicables"
            name="coberturasAplicables"
            rows="4"
            className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Listar y describir las coberturas que aplican al siniestro..."
            value={formData.coberturasAplicables || ''}
            onChange={(e) => onInputChange('coberturasAplicables', e.target.value)}
          />
        </div>

        {/* Exclusiones */}
        <div>
          <label htmlFor="exclusiones" className="block text-sm font-medium text-gray-700 mb-2">
            ‚ùå Exclusiones
          </label>
          <textarea
            id="exclusiones"
            name="exclusiones"
            rows="4"
            className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Identificar exclusiones que puedan aplicar al siniestro..."
            value={formData.exclusiones || ''}
            onChange={(e) => onInputChange('exclusiones', e.target.value)}
          />
        </div>

        {/* Garant√≠as */}
        <div>
          <label htmlFor="garantias" className="block text-sm font-medium text-gray-700 mb-2">
            üõ°Ô∏è Garant√≠as
          </label>
          <textarea
            id="garantias"
            name="garantias"
            rows="4"
            className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Describir garant√≠as espec√≠ficas que apliquen al caso..."
            value={formData.garantias || ''}
            onChange={(e) => onInputChange('garantias', e.target.value)}
          />
        </div>

        {/* Coaseguro */}
        <div>
          <label htmlFor="coaseguro" className="block text-sm font-medium text-gray-700 mb-2">
            ü§ù Coaseguro
          </label>
          <textarea
            id="coaseguro"
            name="coaseguro"
            rows="4"
            className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Informaci√≥n sobre coaseguro, participaci√≥n de otras aseguradoras..."
            value={formData.coaseguro || ''}
            onChange={(e) => onInputChange('coaseguro', e.target.value)}
          />
        </div>
      </div>

      {/* Nota sobre IA */}
      <div className="bg-blue-50 border-l-4 border-blue-400 p-4">
        <div className="flex">
          <div className="flex-shrink-0">
            <svg className="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
            </svg>
          </div>
          <div className="ml-3">
            <p className="text-sm text-blue-700">
              üí° <strong>Asistente IA disponible:</strong> Usa los botones de IA para obtener ayuda en el an√°lisis de cobertura, identificaci√≥n de exclusiones y evaluaci√≥n de garant√≠as.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AnalisisCoberturaAjuste;
